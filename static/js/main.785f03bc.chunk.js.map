{"version":3,"sources":["styles.js","components/LinkBar.jsx","components/ContactButtons.jsx","components/MetamaskAuth.jsx","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","container","backgroundColor","palette","background","paper","padding","spacing","icon","marginRight","button","marginTop","boxRight","justifyContent","display","cardGrid","card","height","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","LinkBar","jsonData","require","scAddress","networks","address","console","log","Grid","item","Button","variant","color","startIcon","Link","target","rel","href","style","ContactButtons","IconButton","aria-label","onClick","window","open","fontSize","MetamaskIcon","Icon","classes","src","isMobileDevice","connect","onConnected","a","ethereum","alert","request","method","accounts","length","account","MetaMaskAuth","onAddressChanged","useState","userAddress","setUserAddress","useEffect","checkIfWalletIsConnected","Address","Connect","metamaskAppDeepLink","homepage","replace","SvgIcon","substring","cards","App","CssBaseline","AppBar","position","Toolbar","alignItems","className","Container","maxWidth","Typography","align","Divider","paragraph","map","key","xs","sm","md","Card","CardMedia","image","title","CardContent","gutterBottom","CardActions","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.785f03bc.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  icon: {\n    marginRight: \"20px\",\n  },\n  button: {\n    marginTop: \"40px\",\n  },\n  boxRight: {\n    justifyContent: \"flex-end\",\n    display: \"flex\",\n  },\n  cardGrid: {\n    padding: \"20px 0\",\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", //16/9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: \"50px 0\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\n\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport DocumentScannerIcon from \"@mui/icons-material/DocumentScanner\";\n\nimport { Grid, Link } from \"@material-ui/core\";\nimport Button from \"@mui/material/Button\";\n\nconst LinkBar = () => {\n  const jsonData = require('../contracts/Nfts.json'); \n  const scAddress = jsonData.networks[4].address;\n   \n  console.log(jsonData);\n  return (\n    <Grid container spacing={2} justifyContent=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" startIcon={<GitHubIcon />}>\n          <Link\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/mihaidicianu/nfts\"\n            style={{ color: \"#FFF\" }}\n          >\n            Github repository\n          </Link>\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<DocumentScannerIcon />}\n        >\n          <Link\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\"https://rinkeby.etherscan.io/address/\" + scAddress}\n            style={{ color: \"#FFF\" }}\n          >\n            Smart contract\n          </Link>\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LinkBar;\n","import React from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport EmailIcon from \"@mui/icons-material/Email\";\n\nconst ContactButtons = () => {\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid item>\n        <IconButton\n          aria-label=\"Linkedin.com\"\n          onClick={() =>\n            window.open(\"https://www.linkedin.com/in/mihai-dicianu-9a6308188/\")\n          }\n        >\n          <LinkedInIcon fontSize=\"large\" />\n        </IconButton>\n      </Grid>\n      <Grid item>\n        <IconButton\n          // aria-label=\"Linkedin.com\"\n          onClick={() =>\n            window.open(\n              \"mailto:mihaidicianu@gmail.com?subject=Cool%20site,%20let's%20talk!\"\n            )\n          }\n        >\n          <EmailIcon fontSize=\"large\" />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactButtons;\n","import React, { useEffect, useState } from \"react\";\n\nimport Button from \"@mui/material/Button\";\nimport { Box, Grid, Link } from \"@material-ui/core\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport { homepage } from \"../../package.json\";\n\nconst MetamaskIcon = () => {\n  return (\n    <Icon>\n      <img classes={{ height: \"100%\" }} src=\"../images/metamask-fox.svg\" />\n    </Icon>\n  );\n};\n\nfunction isMobileDevice() {\n  return \"ontouchstart\" in window || \"onmsgesturechange\" in window;\n}\n\nasync function connect(onConnected) {\n  if (!window.ethereum) {\n    alert(\"Get MetaMask!\");\n    return;\n  }\n\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\",\n  });\n\n  onConnected(accounts[0]);\n}\n\nasync function checkIfWalletIsConnected(onConnected) {\n  if (window.ethereum) {\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\",\n    });\n\n    if (accounts.length > 0) {\n      const account = accounts[0];\n      onConnected(account);\n      return;\n    }\n\n    if (isMobileDevice()) {\n      await connect(onConnected);\n    }\n  }\n}\n\nexport default function MetaMaskAuth({ onAddressChanged }) {\n  const [userAddress, setUserAddress] = useState(\"\");\n\n  useEffect(() => {\n    checkIfWalletIsConnected(setUserAddress);\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-line react-hooks/exhaustive-deps\n    onAddressChanged(userAddress);\n  }, [userAddress]);\n\n  return userAddress ? (\n    <div>\n      Connected with <Address userAddress={userAddress} />\n    </div>\n  ) : (\n    <Connect setUserAddress={setUserAddress} />\n  );\n}\n\nfunction Connect({ setUserAddress }) {\n  if (isMobileDevice()) {\n    const dappUrl = homepage.replace(\"https://\", \"\"); // TODO enter your dapp URL. For example: https://uniswap.exchange. (don't enter the \"https://\")\n    const metamaskAppDeepLink = \"https://metamask.app.link/dapp/\" + dappUrl;\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={\n          <SvgIcon>\n            <MetamaskIcon />\n          </SvgIcon>\n        }\n        onClick={() => connect(setUserAddress)}\n      >\n        <Link\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={metamaskAppDeepLink}\n        >\n          Connect to MetaMask\n        </Link>\n      </Button>\n    );\n  }\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      startIcon={<MetamaskIcon />}\n      onClick={() => connect(setUserAddress)}\n    >\n      Connect to MetaMask\n    </Button>\n  );\n}\n\nfunction Address({ userAddress }) {\n  return (\n    <span>\n      {userAddress.substring(0, 5)}…\n      {userAddress.substring(userAddress.length - 4)}\n    </span>\n  );\n}\n","import React from \"react\";\n\nimport {\n  Typography,\n  AppBar,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  CssBaseline,\n  Grid,\n  Toolbar,\n  Container,\n  Divider,\n} from \"@material-ui/core\";\nimport Button from \"@mui/material/Button\";\nimport useStyles from \"./styles\";\n\nimport LinkBar from \"./components/LinkBar\";\nimport ContactButtons from \"./components/ContactButtons\";\n\nimport MetaMaskAuth from \"./components/MetamaskAuth\";\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst App = () => {\n  const classes = useStyles();\n  const addrlog = () => {\n    console.log(\"called log\");\n  };\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar display=\"flex\">\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n            <Grid item>\n              <ContactButtons />\n            </Grid>\n            <Grid item>\n              <MetaMaskAuth onAddressChanged={addrlog} />\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <main>\n        <div className={classes.container}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\">\n              NFT Collection\n            </Typography>\n            <Divider />\n            <Typography\n              variant=\"h5\"\n              align=\"center\"\n              color=\"textSecondary\"\n              paragraph\n            >\n              Use the buttons below to see the Github repository, the deployed\n              smart contract or to mint a new NFT\n            </Typography>\n            <div className={classes.button}>\n              <LinkBar />\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n              <Grid item key={card} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\">\n                      Heading\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this to describe the\n                      content\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n            <Grid item>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image=\"https://source.unsplash.com/random\"\n                  title=\"Image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\">\n                    Heading\n                  </Typography>\n                  <Typography>\n                    This is a media card. You can use this to describe the\n                    content\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" color=\"primary\">\n                    View\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    Edit\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Contact\n        </Typography>\n        <ContactButtons />\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}